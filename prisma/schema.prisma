generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model User {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String      @unique
  password      String
  role          String      @default("user")
  createdAt     DateTime    @default(now())
  username      String?     @unique
  status        String?
  dept          String?
  active        Boolean     @default(false)
  otp           String?
  otpExpiry     DateTime?
  cartItems     CartItem[]  @relation("UserCartItems")
  phone         String?
  address       String?
  profileImage  String?

  // üü¢ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏Å‡∏±‡∏ö Order
  orders        Order[]
}

model Product {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  price       Float
  stock       Json          // {"S": 10, "M": 20, ...}
  imageUrls   String[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  cartItems   CartItem[]   @relation("ProductCartItems")
  orderItems  OrderItem[]  @relation("ProductOrderItems") // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏Å‡∏±‡∏ö OrderItem
}

model CartItem {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId     String   @db.ObjectId
  productId  String   @db.ObjectId
  quantity   Int      @default(1)
  size       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user       User     @relation("UserCartItems", fields: [userId], references: [id])
  product    Product  @relation("ProductCartItems", fields: [productId], references: [id])
}

model Order {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  userId      String       @db.ObjectId
  user        User         @relation(fields: [userId], references: [id])
  totalAmount Float
  status      String       @default("pending") // 'pending' | 'paid' | 'shipped' | 'cancelled'
  createdAt   DateTime     @default(now())
  orderItems  OrderItem[]
}

model OrderItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  orderId   String   @db.ObjectId
  order     Order    @relation(fields: [orderId], references: [id])
  productId String   @db.ObjectId
  product   Product  @relation("ProductOrderItems", fields: [productId], references: [id]) // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ä‡∏∑‡πà‡∏≠ relation ‡πÉ‡∏´‡πâ‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå
  quantity  Int
  price     Float
  size      String
}

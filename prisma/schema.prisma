generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model User {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  name         String?
  email        String     @unique
  password     String
  role         String     @default("user")
  createdAt    DateTime   @default(now())
  username     String?    @unique
  status       String?
  dept         String?
  active       Boolean    @default(false)
  otp          String?
  otpExpiry    DateTime?
  cartItems    CartItem[] @relation("UserCartItems")
  phone        String?
  address      String?
  profileImage String?

  // üü¢ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏Å‡∏±‡∏ö Order
  orders        Order[]
  specialOrders SpecialOrder[] @relation("UserSpecialOrders")
}

model Product {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  category    String?
  price       Json // ‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÑ‡∏ã‡∏™‡πå {"S": 100, "M": 200}
  stock       Json // {"S": 10, "M": 20, ...}
  imageUrls   String[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  cartItems   CartItem[]  @relation("ProductCartItems")
  orderItems  OrderItem[] @relation("ProductOrderItems")
}

model CartItem {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId     String   @db.ObjectId
  productId  String   @db.ObjectId
  quantity   Int      @default(1)
  size       String
  unitPrice  Int
  totalPrice Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user    User    @relation("UserCartItems", fields: [userId], references: [id])
  product Product @relation("ProductCartItems", fields: [productId], references: [id])
}

model OrderItem {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  orderId    String  @db.ObjectId
  order      Order   @relation(fields: [orderId], references: [id])
  productId  String  @db.ObjectId
  product    Product @relation("ProductOrderItems", fields: [productId], references: [id])
  quantity   Int
  price      Float
  size       String
  unitPrice  Float
  totalPrice Float

  // üëâ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
  status         String @default("‡∏õ‡∏Å‡∏ï‡∏¥")
  returnQuantity Int?   @default(0)

  // üëá ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏Å‡∏±‡∏ö ReturnItem
  returnItems ReturnItem[]
}

model Order {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])

  totalAmount  Float
  status       String  @default("‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£") // ‡πÄ‡∏î‡∏¥‡∏° "pending" ‚Üí ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö UI/‡πÇ‡∏Ñ‡πâ‡∏î‡∏ù‡∏±‡πà‡∏á‡∏´‡∏ô‡πâ‡∏≤
  cancelReason String? // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å (optional)

  trackingId    String   @unique
  createdAt     DateTime @default(now())
  createdAtThai String?

  orderItems OrderItem[]

  // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏Å‡∏±‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
  returnRequests ReturnRequest[]
}

model ReturnRequest {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  orderId   String   @db.ObjectId
  order     Order    @relation(fields: [orderId], references: [id])
  status    String   @default("pending") // pending, approved, rejected
  reason    String? // ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
  adminNote String? // ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
  images    String[] // ‡πÄ‡∏Å‡πá‡∏ö path ‡∏£‡∏π‡∏õ
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // ‚úÖ relation ‡∏Å‡∏±‡∏ö ReturnItem
  items ReturnItem[]
}

model ReturnItem {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  returnRequestId String        @db.ObjectId
  returnRequest   ReturnRequest @relation(fields: [returnRequestId], references: [id])

  orderItemId String    @db.ObjectId
  orderItem   OrderItem @relation(fields: [orderItemId], references: [id])

  quantity Int

  // ‚úÖ ‡∏´‡πâ‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ô‡∏ã‡πâ‡∏≥‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô
  @@unique([orderItemId])
}

model SpecialOrder {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  user   User   @relation("UserSpecialOrders", fields: [userId], references: [id])

  firstName   String
  lastName    String
  phone       String
  email       String?
  address     String
  productType String
  model       String
  quantity    Int
  sizeLabel   String
  chest       Float
  length      Float
  notes       String?

  status       String  @default("‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£")
  cancelReason String?

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  createdAtThai String?
}

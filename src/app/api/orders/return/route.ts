import { NextRequest, NextResponse } from "next/server";
import { PrismaClient } from "@prisma/client";
import nodemailer from "nodemailer";
import fs from "fs/promises";
import path from "path";

const prisma = new PrismaClient();

/** ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏• */
async function sendEmail(to: string, subject: string, html: string) {
  if (!process.env.EMAIL_USER || !process.env.EMAIL_PASS) {
    console.warn("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ EMAIL_USER/EMAIL_PASS ‚Äî ‡∏Ç‡πâ‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•");
    return;
  }
  const transporter = nodemailer.createTransport({
    service: "gmail",
    auth: { user: process.env.EMAIL_USER, pass: process.env.EMAIL_PASS },
  });

  await transporter.sendMail({
    from: `"‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå" <${process.env.EMAIL_USER}>`,
    to,
    subject,
    html,
  });
}

export async function POST(req: NextRequest) {
  try {
    const formData = await req.formData();

    const orderId = formData.get("orderId") as string | null;
    const reason = formData.get("reason") as string | null;
    const files = formData.getAll("images") as File[];

    // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à items
    const itemsRaw = formData.get("items") as string | null;
    if (!itemsRaw) {
      return NextResponse.json({ error: "‡∏ï‡πâ‡∏≠‡∏á‡∏™‡πà‡∏á items ‡πÄ‡∏õ‡πá‡∏ô JSON string" }, { status: 400 });
    }

    let items: { orderItemId: string; quantity: number }[];
    try {
      items = JSON.parse(itemsRaw);
    } catch {
      return NextResponse.json({ error: "items ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà JSON ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á", raw: itemsRaw }, { status: 400 });
    }

    if (!orderId || !Array.isArray(items) || items.length === 0) {
      return NextResponse.json({ error: "‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏∏ orderId ‡πÅ‡∏•‡∏∞ items" }, { status: 400 });
    }

    if (!files || files.length < 1 || files.length > 5) {
      return NextResponse.json({ error: "‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ô‡∏ö‡∏£‡∏π‡∏õ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 5 ‡∏£‡∏π‡∏õ" }, { status: 400 });
    }

    // ‚úÖ ‡∏´‡∏≤ order + user + orderItems
    const order = await prisma.order.findUnique({
      where: { id: orderId },
      include: { user: true, orderItems: true },
    });
    if (!order) return NextResponse.json({ error: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠" }, { status: 404 });

    // ‚úÖ ‡∏ï‡πâ‡∏≠‡∏á‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß
    if (order.status !== "‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÄ‡πÄ‡∏•‡πâ‡∏ß" && order.status !== "‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß") {
      return NextResponse.json(
        { error: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à" },
        { status: 400 }
      );
    }

    // ‚úÖ ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 3 ‡∏ß‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡∏™‡πà‡∏á (‡πÉ‡∏ä‡πâ updatedAt ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ‡∏ñ‡∏≠‡∏¢‡πÑ‡∏õ‡πÉ‡∏ä‡πâ createdAt)
    const deliveredAt = (order as any).updatedAt ?? order.createdAt;
    const now = new Date().getTime();
    const diffDays = (now - new Date(deliveredAt).getTime()) / (1000 * 60 * 60 * 24);
    if (diffDays > 3) {
      return NextResponse.json(
        { error: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô 3 ‡∏ß‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡∏™‡πà‡∏á" },
        { status: 400 }
      );
    }

    // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤/‡∏à‡∏≥‡∏ô‡∏ß‡∏ô + ‡∏Å‡∏±‡∏ô‡∏Ñ‡∏∑‡∏ô‡∏ã‡πâ‡∏≥
    for (const item of items) {
      const orderItem = order.orderItems.find((oi) => oi.id === item.orderItemId);
      if (!orderItem) {
        return NextResponse.json({ error: `‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠: ${item.orderItemId}` }, { status: 400 });
      }
      if (item.quantity <= 0 || item.quantity > orderItem.quantity) {
        return NextResponse.json(
          { error: `‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏∑‡∏ô (${item.quantity}) ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 1 ‡∏ñ‡∏∂‡∏á ${orderItem.quantity})` },
          { status: 400 }
        );
      }
      const existingReturn = await prisma.returnItem.findUnique({ where: { orderItemId: item.orderItemId } });
      if (existingReturn) {
        return NextResponse.json(
          { error: `‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏µ‡πâ (orderItemId: ${item.orderItemId}) ‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß` },
          { status: 400 }
        );
      }
    }

    // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ
    const uploadDir = path.join(process.cwd(), "public", "uploads");
    await fs.mkdir(uploadDir, { recursive: true });

    const savedPaths: string[] = [];
    for (const file of files) {
      const bytes = Buffer.from(await file.arrayBuffer());
      const safeName = file.name.replace(/[^\w.\-]+/g, "_");
      const fileName = `${Date.now()}-${safeName}`;
      const filePath = path.join(uploadDir, fileName);
      await fs.writeFile(filePath, bytes);
      savedPaths.push(`/uploads/${fileName}`);
    }

    // ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á ReturnRequest + ReturnItem
    const request = await prisma.returnRequest.create({
      data: {
        orderId,
        reason: reason ?? "",
        images: savedPaths,
        status: "pending", // ‚Üê ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏™‡∏Ñ‡∏µ‡∏°‡∏≤‡∏ù‡∏±‡πà‡∏á main
        items: {
          create: items.map((it) => ({
            orderItemId: it.orderItemId,
            quantity: it.quantity,
          })),
        },
      },
      include: { items: true },
    });

    // ‚úÖ ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
    try {
      await sendEmail(
        order.user.email,
        `‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ #${order.trackingId}`,
        `
          <h2>üì¶ ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß</h2>
          <p>‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏∏‡∏ì <b>${order.user.name ?? ""}</b></p>
          <p>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠: ${order.id}</p>
          <p>Tracking ID: ${order.trackingId}</p>
          <p><b>‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•:</b> ${reason ?? "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"}</p>
          <p>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${request.status}</p>
          <p>‡πÅ‡∏ô‡∏ö‡∏£‡∏π‡∏õ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ${savedPaths.length} ‡∏£‡∏π‡∏õ</p>
          <hr />
          <p>‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏à‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÅ‡∏à‡πâ‡∏á‡∏ú‡∏•‡πÉ‡∏´‡πâ‡∏ó‡∏£‡∏≤‡∏ö‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á‡∏Ñ‡πà‡∏∞ üôè</p>
        `
      );
    } catch (mailErr) {
      console.error("‚ùå ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", mailErr);
    }

    return NextResponse.json({ message: "‚úÖ ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢", request }, { status: 201 });
  } catch (err) {
    console.error("‚ùå Error creating return request:", err);
    return NextResponse.json({ error: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ" }, { status: 500 });
  }
}

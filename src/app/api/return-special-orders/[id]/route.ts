// src/app/api/return-special-orders/[id]/route.ts
import { NextRequest, NextResponse } from "next/server";
import { PrismaClient } from "@prisma/client";
import nodemailer from "nodemailer";
import Stripe from "stripe";

const prisma = new PrismaClient();
const stripe = new Stripe(process.env.STRIPE_SECRET_KEY!);

/** Helper: ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏• */
async function sendEmail(to: string, subject: string, html: string) {
  if (!process.env.EMAIL_USER || !process.env.EMAIL_PASS) return;

  const transporter = nodemailer.createTransport({
    service: "gmail",
    auth: { user: process.env.EMAIL_USER, pass: process.env.EMAIL_PASS },
  });

  await transporter.sendMail({
    from: `"T-Double" <${process.env.EMAIL_USER}>`,
    to,
    subject,
    html,
  });
}

/** ---------------- PATCH: Admin ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥/‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ---------------- */
export async function PATCH(
  req: NextRequest,
  context: { params: Promise<{ id: string }> }
) {
  try {
    const { id } = await context.params; // ‚úÖ ‡∏ï‡πâ‡∏≠‡∏á await params
    const body = await req.json();
    const { status, adminNote } = body;

    if (!["‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥", "‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò"].includes(status)) {
      return NextResponse.json(
        { error: "status ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥' ‡∏´‡∏£‡∏∑‡∏≠ '‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò'" },
        { status: 400 }
      );
    }

    // üîé ‡∏´‡∏≤ returnSpecialRequest ‡∏û‡∏£‡πâ‡∏≠‡∏° specialOrder
    const request = await prisma.returnSpecialRequest.findUnique({
      where: { id },
      include: { specialOrder: true },
    });

    if (!request) {
      return NextResponse.json(
        { error: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤" },
        { status: 404 }
      );
    }

    let refundId: string | null = null;

    // ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ ‚Üí Refund Stripe
    if (status === "‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥") {
      if (!request.specialOrder?.paymentIntentId) {
        return NextResponse.json(
          { error: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ" },
          { status: 400 }
        );
      }

      const refund = await stripe.refunds.create({
        payment_intent: request.specialOrder.paymentIntentId,
      });
      refundId = refund.id;

      // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï SpecialOrder ‡∏î‡πâ‡∏ß‡∏¢
      await prisma.specialOrder.update({
        where: { id: request.specialOrderId },
        data: {
          refundId,
          status: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å - ‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢",
        },
      });
    }

    // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ + note ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
    const updated = await prisma.returnSpecialRequest.update({
      where: { id },
      data: {
        status,
        adminNote: adminNote ?? null,
      },
      include: { specialOrder: true },
    });

    // ‚úÖ ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏à‡πâ‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
    try {
      if (updated.specialOrder?.email) {
        await sendEmail(
          updated.specialOrder.email,
          `‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ #${updated.specialOrder.trackingId}`,
          `
            <h2>üì¢ ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h2>
            <p>‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: <b>${status}</b></p>
            <p>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå: ${updated.specialOrder.id}</p>
            <p>Tracking ID: ${updated.specialOrder.trackingId}</p>
            ${
              status === "‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥"
                ? `<p>‚úÖ ‡πÄ‡∏£‡∏≤‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß (Refund ID: ${refundId})<br/>‡πÄ‡∏á‡∏¥‡∏ô‡∏à‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 5‚Äì10 ‡∏ß‡∏±‡∏ô‡∏ó‡∏≥‡∏Å‡∏≤‡∏£</p>`
                : `<p>‚ùå ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò</p>`
            }
            ${adminNote ? `<p><b>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏à‡∏≤‡∏Å‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô:</b> ${adminNote}</p>` : ""}
          `
        );
      }
    } catch (mailErr) {
      console.error("‚ùå ‡∏™‡πà‡∏á‡πÄ‡∏°‡∏•‡πÅ‡∏à‡πâ‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", mailErr);
    }

    return NextResponse.json(
      {
        message: `‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô ${status} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢`,
        request: updated,
      },
      { status: 200 }
    );
  } catch (err) {
    console.error("‚ùå Error in PATCH /return-special-orders/[id]:", err);
    return NextResponse.json(
      { error: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ" },
      { status: 500 }
    );
  }
}

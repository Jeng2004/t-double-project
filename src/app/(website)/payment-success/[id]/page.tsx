'use client';

import React, { use, useEffect } from 'react';
import Link from 'next/link';
import styles from './payment-success.module.css';
import { getUserIdForFrontend } from '@/lib/get-user-id';

type CartListItem = { productId: string; size: string };

export default function PaymentSuccessPage({
  params,
  searchParams,
}: {
  params: Promise<{ id: string }>;
  searchParams?: Promise<{ orderId?: string }>;
}) {
  // ‚úÖ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á /payment-success/[id] ‡πÅ‡∏•‡∏∞ /success?orderId=
  const { id: sessionId } = use(params);
  const { orderId } = searchParams ? use(searchParams) : {};

  // ‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡πÑ‡∏´‡∏ô‡πÑ‡∏î‡πâ‡∏Å‡πà‡∏≠‡∏ô (orderId ‡∏à‡∏∞‡∏°‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
  const identifier = orderId || sessionId;

  // ‚úÖ ‡∏•‡πâ‡∏≤‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÅ‡∏ö‡∏ö fallback ‡∏´‡∏•‡∏±‡∏á‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô
  useEffect(() => {
    const cleanupCart = async () => {
      try {
        const userId = getUserIdForFrontend();
        if (!userId) return;

        const res = await fetch(`/api/cart?userId=${encodeURIComponent(userId)}`, {
          cache: 'no-store',
        });
        if (!res.ok) return;

        const raw = (await res.json()) as unknown;
        if (!Array.isArray(raw) || raw.length === 0) return;

        const items = raw as CartListItem[];
        await Promise.allSettled(
          items.map((it) =>
            fetch('/api/cart', {
              method: 'DELETE',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ userId, productId: it.productId, size: it.size }),
            })
          )
        );
      } catch (err) {
        console.error('‚ùå ‡∏•‡πâ‡∏≤‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', err);
      }
    };

    cleanupCart();
  }, []);

  return (
    <div className={styles.page}>
      <div className={styles.checkIcon}>‚úì</div>

      <h1 className={styles.title}>‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</h1>
      <p className={styles.subtitle}>
        ‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏•‡πâ‡∏ß ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏≠‡∏∏‡∏î‡∏´‡∏ô‡∏∏‡∏ô üíõ
        <br />
        ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
      </p>

      <div className={styles.session}>
        {orderId ? 'ORDER ID:' : 'SESSION:'}&nbsp;<span>{identifier || '-'}</span>
      </div>

      <div className={styles.actions}>
        <Link href="/profile" className={styles.primaryBtn}>
          ‡∏î‡∏π‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô
        </Link>
        <Link href="/" className={styles.secondaryBtn}>
          ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡πà‡∏≠
        </Link>
      </div>
    </div>
  );
}